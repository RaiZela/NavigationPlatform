services:
  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    build:
      context: ApiGateway/Gateway.API
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    networks:
      - backend

  journey.api:
    image: ${DOCKER_REGISTRY-}journeyapi
    build:
      context: .
      dockerfile: Services/JourneyService/Journey.API/Dockerfile
    ports:
      - "5100:5100"
      - "5002:5002"
    networks:
      - backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Data Source=sqlserver;Database=JourneyDb;User=sa;Password=Your_password123!;Encrypt=False;TrustServerCertificate=True;
    depends_on:
      - sqlserver

  notificationservice:
    image: ${DOCKER_REGISTRY-}notificationservice
    build:
      context: .
      dockerfile: Services/NotificationService/NotificationService/Dockerfile
    ports:
      - "5200:5200"
      - "5003:5003"
    networks:
      - backend

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    ports:
      - "1433:1433"
    environment:
      MSSQL_SA_PASSWORD: "Your_password123!"
      ACCEPT_EULA: "Y"
    networks:
      - backend

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: Keycloak
    command: start-dev
    environment:
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME= localhost
      - KC_HOSTNAME_PORT= 8080
      - KC_HOSTNAME_STRICT_BACKCHANNEL= "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    volumes:
      - ./.containers/identity:/opt/keycloak/data
    ports:
      - 8080:8080
    networks:
      - backend

  journey-mq:
    image: rabbitmq:management
    container_name: Journey.RabbitMq
    hostname: journey-mq
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend



networks:
  backend:
    driver: bridge

